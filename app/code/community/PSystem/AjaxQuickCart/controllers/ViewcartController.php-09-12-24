<?php
/**
 * @category   PSystem
 * @package    PSystem_AjaxQuickCart
 * @author     Pascal System <info@pascalsystem.pl>
 * @version    1.0.2
 */

/**
 * @see Mage_Checkout_CartController
 */
require_once 'Mage/Checkout/controllers/CartController.php';

/**
 * Pascal Quick Cart Ajax Header JavaScripts
 * 
 * @category   PSystem
 * @package    PSystem_AjaxQuickCart
 * @author     Pascal System <info@pascalsystem.pl>
 * @version    1.0.2
 */
class PSystem_AjaxQuickCart_ViewcartController extends Mage_Checkout_CartController {
    /**
     * Index action display only products in cart
     * 
     * @return void
     */
    public function indexAction() {
        $this->loadLayout()
            ->_initLayoutMessages('checkout/session')
            ->_initLayoutMessages('catalog/session');
        $this->renderLayout();
    }
    
    /**
     * Refresh box with items in cart
     * 
     * @return void
     */
    public function refreshAction() {
        /* @var $layout Mage_Core_Model_Layout */
        $layout = $this->loadLayout()->getLayout();
        /* @var $ajaxBlock PSystem_AjaxQuickCart_Block_Refresh_Response */
        if (($ajaxBlock = $layout->getBlock('ajax.response'))
            && ($ajaxBlock instanceof PSystem_AjaxQuickCart_Block_Refresh_Response)) {
            echo $ajaxBlock->toHtml();
            exit;
        }
    }

    /**
     * Update cart item quantities via AJAX
     * 
     * @return void
     */
    public function updatePostAction() {
        $cart = Mage::getSingleton('checkout/cart');
        $cartData = $this->getRequest()->getPost('cart');

        if (is_array($cartData)) {
            foreach ($cartData as $itemId => $item) {
                $qty = isset($item['qty']) ? (int)$item['qty'] : 0;
                if ($qty > 0) {
                    $cart->updateItem($itemId, array('qty' => $qty));
                } else {
                    $cart->removeItem($itemId);
                }
            }
            $cart->save();

            // Calculate the new total
            $grandTotal = $cart->getQuote()->getGrandTotal();
            $formattedTotal = Mage::helper('checkout')->formatPrice($grandTotal); 

            // Calculate the new total for the updated item
            $item = $cart->getQuote()->getItemById($itemId);
            $itemSubtotal = $item->getRowTotal(); 
            $formattedSubtotal = Mage::helper('checkout')->formatPrice($itemSubtotal);

            // Return JSON response 
            $this->getResponse()->setHeader('Content-Type', 'application/json');
            $this->getResponse()->setBody(Mage::helper('core')->jsonEncode(array(
                'success' => true,
                'newTotal' => $formattedTotal,
                'newSubtotal' => $formattedSubtotal, // Add the new subtotal
                'itemId' => $itemId // Include the item ID for reference
            )));
        } else {
            // Return error response
            $this->getResponse()->setHeader('Content-Type', 'application/json');
            $this->getResponse()->setBody(Mage::helper('core')->jsonEncode(array(
                'success' => false,
                'message' => 'Error updating the cart.'
            )));
        }
    }
}